---
 gframe/data_manager.cpp | 26 +++++++++++++-------------
 1 file changed, 13 insertions(+), 13 deletions(-)

diff --git a/gframe/data_manager.cpp b/gframe/data_manager.cpp
index 7d5951eb..c603ae52 100644
--- a/gframe/data_manager.cpp
+++ b/gframe/data_manager.cpp
@@ -1,6 +1,8 @@
 #include "data_manager.h"
 #include "game.h"
 #include <stdio.h>
+#include <iostream>
+#include <sstream>
 
 namespace ygo {
 
@@ -350,20 +352,18 @@ int DataManager::CardReader(int code, void* pData) {
 	return 0;
 }
 byte* DataManager::ScriptReaderEx(const char* script_name, int* slen) {
-	// default script name: ./script/c%d.lua
-	char first[256];
-	char second[256];
-	if(mainGame->gameConf.prefer_expansion_script) {
-		sprintf(first, "expansions/%s", script_name + 2);
-		sprintf(second, "%s", script_name + 2);
-	} else {
-		sprintf(first, "%s", script_name + 2);
-		sprintf(second, "expansions/%s", script_name + 2);
+	// default script name: ./script/c%d.lua -> /c%d.lua
+	std::string file_name(script_name + 8);
+	const char* _script_path = getenv("YGOPRO_SCRIPT_PATH");
+	if (!_script_path) return NULL;
+	std::istringstream script_path(_script_path);
+	std::string prefix;
+	byte* res = NULL;
+	while(!res && getline(script_path, prefix, ':')) {
+		std::string full_path = prefix + file_name;
+		res = ScriptReader(full_path.c_str(), slen);
 	}
-	if(ScriptReader(first, slen))
-		return scriptBuffer;
-	else
-		return ScriptReader(second, slen);
+	return res;
 }
 byte* DataManager::ScriptReader(const char* script_name, int* slen) {
 #ifdef _WIN32
-- 
2.25.1

